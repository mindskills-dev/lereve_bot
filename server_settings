у меня проект lereve. Веб-сервис будет запускаться по домену: lereve.vps.myjino.ru.
Написан на django==4
Использую дополнительно:
асинхронный телеграм бот на aiogram==3.15
postgres:14
flower==2.0.1
redis==5.2.0
celery==5.4.0
django-celery-beat==2.7.0

проект будет называться lereve
веб приложение будет называться lereve_site
Мой телеграм бот будет называться lereve_bot
сайт надо запустить на gunicorn и supervisor
Запускаю без докера
И напиши инструкции по настройкам сервере ubuntu 22.04 LTS

код проекта находится здесь: git clone https://github.com/shaydullinayrat/lereve_bot.git



lereve-server: crg*xqhY9pzq
sudo apt install -y python3-pip python3-dev  python3-venv git nginx supervisor
#sudo apt install -y python3-pip python3-dev libpq-dev build-essential libssl-dev libffi-dev python3-venv git nginx supervisor

sudo groupadd --system webapps
sudo useradd --system --gid webapps --shell /bin/bash --home /webapps/lereve_bot lereve

sudo mkdir -p /webapps/
cd /webapps/lereve_bot
python3 -m venv venv

source venv/bin/activate
pip install -r requirements.txt

mv .env_prod .env

POSTGRES
sudo apt install postgresql postgresql-contrib
sudo -u postgres psql
CREATE DATABASE lereve_db;
CREATE USER lereve_user WITH PASSWORD 'MLl!8)co37Oo';
ALTER ROLE lereve_user SET client_encoding TO 'utf8';
ALTER ROLE lereve_user SET default_transaction_isolation TO 'read committed';
ALTER ROLE lereve_user SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE lereve_db TO lereve_user;
\q


REDIS
sudo apt install redis-server
sudo systemctl status redis

CELERY
sudo nano /etc/supervisor/conf.d/celery.conf



[program:celery]
command=/webapps/lereve_bot/bin/celery -A core worker --loglevel=info
directory=/webapps/lereve_bot
user=www-data
numprocs=1
autostart=true
autorestart=true
stderr_logfile=/var/log/celery.err.log
stdout_logfile=/var/log/celery.out.log

CELERY-BEAT
sudo nano /etc/supervisor/conf.d/celery-beat.conf

[program:celery-beat]
command=/webapps/lereve_bot/bin/celery -A core beat --loglevel=info --pidfile=
directory=/webapps/lereve_bot
user=www-data
numprocs=1
autostart=true
autorestart=true
stderr_logfile=/var/log/celery-beat.err.log
stdout_logfile=/var/log/celery-beat.out.log


TELEGRAM_BOT
sudo nano /etc/supervisor/conf.d/telegram-bot.conf

[program:telegram-bot]
command=/webapps/lereve_bot/bin/python /webapps/lereve_bot/aiogram_bot/main.py
directory=/webapps/lereve_bot
user=www-data
numprocs=1
autostart=true
autorestart=true
stderr_logfile=/var/log/telegram-bot.err.log
stdout_logfile=/var/log/telegram-bot.out.log


sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl restart all


GUNICORN
pip install gunicorn
sudo apt install nano -y
sudo nano /etc/systemd/system/gunicorn.socket

[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target


sudo nano /etc/systemd/system/gunicorn.service

[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User=www-data
Group=www-data
WorkingDirectory=/webapps/lereve_bot
ExecStart=/webapps/lereve_bot/venv/bin/gunicorn \
          --access-logfile - \
          --workers 3 \
          --bind unix:/run/gunicorn.sock \
          core.wsgi:application

[Install]
WantedBy=multi-user.target



sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

sudo systemctl status gunicorn.socket
file /run/gunicorn.sock
sudo journalctl -u gunicorn.socket
sudo systemctl status gunicorn
curl --unix-socket /run/gunicorn.sock localhost
sudo journalctl -u gunicorn
sudo systemctl daemon-reload
sudo systemctl restart gunicorn

NGINX
sudo nano /etc/nginx/sites-available/lereve

upstream lereve_server {
    server unix:/run/gunicorn.sock fail_timeout=0;
}

server {
    listen 80;
    server_name e23dd8c01b8f.vps.myjino.ru mindskills.fun;
    location /static/ {
        alias /webapps/lereve_bot/static/;  # Укажите путь к STATIC_ROOT
    }
    location /media/ {
        alias /webapps/lereve_bot/media/;  # Укажите путь к STATIC_ROOT
    }
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_pass http://lereve_server;
    }
}



sudo ln -s /etc/nginx/sites-available/lereve /etc/nginx/sites-enabled
sudo nginx -t
sudo systemctl restart nginx


ls -ld /webapps/lereve_bot/media

sudo chown -R www-data:www-data /webapps/lereve_bot/media
sudo chmod -R 755 /webapps/lereve_bot/media


CELERY
sudo nano /etc/supervisor/conf.d/celery.conf

[program:celery]
command=/webapps/lereve_bot/venv/bin/celery -A core worker --loglevel=info
directory=/webapps/lereve_bot
user=www-data
autostart=true
autorestart=true
stderr_logfile=/webapps/lereve_bot/logs/celery.err.log
stdout_logfile=/webapps/lereve_bot/logs/celery.out.log


CELERY-BEAT
sudo nano /etc/supervisor/conf.d/celery-beat.conf

[program:celery-beat]
command=/webapps/lereve_bot/venv/bin/celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
directory=/webapps/lereve_bot
user=www-data
autostart=true
autorestart=true
stderr_logfile=/webapps/lereve_bot/logs/celery-beat.err.log
stdout_logfile=/webapps/lereve_bot/logs/celery-beat.out.log


TELEGRA-BOT
sudo nano /etc/supervisor/conf.d/lereve-bot.conf

[program:lereve-bot]
command=/webapps/lereve_bot/venv/bin/python manage.py runbot
directory=/webapps/lereve_bot
user=www-data
autostart=true
autorestart=true
stderr_logfile=/webapps/lereve_bot/logs/lereve-bot.err.log
stdout_logfile=/webapps/lereve_bot/logs/lereve-bot.out.log


FLOWER:
sudo nano /etc/supervisor/conf.d/flower.conf
[program:flower]
command=/webapps/lereve_bot/venv/bin/celery -A core flower --port=5555
directory=/webapps/lereve_bot
user=www-data
autostart=true
autorestart=true
stderr_logfile=/webapps/lereve_bot/logs/flower.err.log
stdout_logfile=/webapps/lereve_bot/logs/flower.out.log


sudo mkdir -p /webapps/lereve_bot/logs
sudo chown -R www-data:www-data /webapps/lereve_bot/logs

sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl restart flower






На локалке:
brew services list
brew services start postgresql@14
createuser lereve_user
createdb lereve_db -Olereve_user
psql -U lereve_user -d lereve_db

redis-server

celery -A core worker --loglevel=info

celery -A core beat --loglevel=info

celery -A core status